<?php

/**
 * This is the model base class for the table "tag_use".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TagUse".
 *
 * Columns in table "tag_use" available as properties of the model,
 * followed by relations of table "tag_use" available as properties of the model.
 *
 * @property integer $id
 * @property integer $media_id
 * @property integer $tag_id
 * @property integer $weight
 * @property string $type
 * @property string $created
 * @property string $game_submission_id
 *
 * @property TagOriginalVersion[] $tagOriginalVersions
 * @property GameSubmission $gameSubmission
 * @property Media $media
 * @property Tag $tag
 */
abstract class BaseTagUse_ extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tag_use';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TagUse|TagUses', $n);
	}

	public static function representingColumn() {
		return 'created';
	}

	public function rules() {
		return array(
			array('media_id, tag_id, created, game_submission_id', 'required'),
			array('media_id, tag_id, weight', 'numerical', 'integerOnly'=>true),
			array('type', 'length', 'max'=>64),
			array('game_submission_id', 'length', 'max'=>10),
			array('weight, type', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, media_id, tag_id, weight, type, created, game_submission_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'tagOriginalVersions' => array(self::HAS_MANY, 'TagOriginalVersion', 'tag_use_id'),
			'gameSubmission' => array(self::BELONGS_TO, 'GameSubmission', 'game_submission_id'),
			'media' => array(self::BELONGS_TO, 'Media', 'media_id'),
			'tag' => array(self::BELONGS_TO, 'Tag', 'tag_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'media_id' => null,
			'tag_id' => null,
			'weight' => Yii::t('app', 'Weight'),
			'type' => Yii::t('app', 'Type'),
			'created' => Yii::t('app', 'Created'),
			'game_submission_id' => null,
			'tagOriginalVersions' => null,
			'gameSubmission' => null,
			'media' => null,
			'tag' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('media_id', $this->media_id);
		$criteria->compare('tag_id', $this->tag_id);
		$criteria->compare('weight', $this->weight);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('game_submission_id', $this->game_submission_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination'=>array(
        'pageSize'=>Yii::app()->fbvStorage->get("settings.pagination_size"),
      ),
		));
	}
}