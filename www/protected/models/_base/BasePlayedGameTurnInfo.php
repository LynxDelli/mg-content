<?php

/**
 * This is the model base class for the table "played_game_turn_info".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PlayedGameTurnInfo".
 *
 * Columns in table "played_game_turn_info" available as properties of the model,
 * followed by relations of table "played_game_turn_info" available as properties of the model.
 *
 * @property integer $played_game_id
 * @property integer $turn
 * @property string $data
 * @property integer $created_by_session_id
 *
 * @property PlayedGame $playedGame
 * @property Session $createdBySession
 */
abstract class BasePlayedGameTurnInfo_ extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'played_game_turn_info';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PlayedGameTurnInfo|PlayedGameTurnInfos', $n);
	}

	public static function representingColumn() {
		return 'data';
	}

	public function rules() {
		return array(
			array('played_game_id, turn, data, created_by_session_id', 'required'),
			array('played_game_id, turn, created_by_session_id', 'numerical', 'integerOnly'=>true),
			array('played_game_id, turn, data, created_by_session_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'playedGame' => array(self::BELONGS_TO, 'PlayedGame', 'played_game_id'),
			'createdBySession' => array(self::BELONGS_TO, 'Session', 'created_by_session_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'played_game_id' => null,
			'turn' => Yii::t('app', 'Turn'),
			'data' => Yii::t('app', 'Data'),
			'created_by_session_id' => null,
			'playedGame' => null,
			'createdBySession' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('played_game_id', $this->played_game_id);
		$criteria->compare('turn', $this->turn);
		$criteria->compare('data', $this->data, true);
		$criteria->compare('created_by_session_id', $this->created_by_session_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination'=>array(
        'pageSize'=>Yii::app()->fbvStorage->get("settings.pagination_size"),
      ),
		));
	}
}